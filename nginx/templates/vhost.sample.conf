# HTTPS
server {
    listen 443 ssl http2;
    server_name ${DOMAIN};

    # SSL
    ssl_certificate /etc/letsencrypt/live/${PATH}/fullchain.pem;
    ssl_certificate_key /etc/letsencrypt/live/${PATH}/privkey.pem;
    #ssl_dhparam /etc/ssl/dhparams4096.pem; # for Score=100 on ssllabs.com
    ssl_dhparam /etc/ssl/dhparams.pem;

    # ssl_protocols TLSv1.2; # for Score=100 on ssllabs.com
    ssl_protocols TLSv1.2 TLSv1.1 TLSv1;
    #ssl_ciphers AES256+EECDH:AES256+EDH:!aNULL; for Score=100 on ssllabs.com
    ssl_ciphers 'EECDH+AESGCM:EDH+AESGCM:AES256+EECDH:AES256+EDH';

    # SSL Genetric
    ssl_ecdh_curve secp384r1;
    add_header Strict-Transport-Security "max-age=31536000; includeSubDomains" always;
    ssl_session_cache shared:SSL:10m;
    ssl_session_timeout 10m;
    ssl_prefer_server_ciphers on;
    ssl_stapling on;
    ssl_stapling_verify on;
    resolver 8.8.8.8 8.8.4.4 valid=300s;
    resolver_timeout 10s;
    add_header X-Frame-Options DENY;
    add_header X-Content-Type-Options nosniff;

    # Root Location
    location / {
        # Proxy Pass      
        proxy_pass http://${UPSTREAM};
        proxy_set_header Host $host;
        proxy_set_header X-Forwarded-For $remote_addr;
        proxy_set_header X-Forwarded-Proto $scheme;
        proxy_buffering off;
        proxy_http_version 1.1;
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection $http_connection;      

        # Basic auth without passing the  auth header
        auth_basic "Authorization Required";                                                                                                                                                                           
        auth_basic_user_file /etc/nginx/htpasswd; 
        proxy_set_header Authorization  "";
    }

#    location / {
#        root /usr/share/nginx/html/;
#    }

    # ACME Document Root
    root /etc/letsencrypt/webrootauth;

    # ACME Location
    location /.well-known/acme-challenge {
        alias /etc/letsencrypt/webrootauth/.well-known/acme-challenge;
        location ~ /.well-known/acme-challenge/(.*) {
            add_header Content-Type application/jose+json;
        }
    }
}

# HTTP
server {
    listen 80;
    server_name ${DOMAIN};
    # HTTP Redirect from port 80 to port 443
    return 301 https://$server_name$request_uri;
}
